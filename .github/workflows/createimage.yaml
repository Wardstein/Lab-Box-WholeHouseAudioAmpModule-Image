name: "Create Image"

on: 
  workflow_dispatch:
    inputs:
      # MAXIMUM 10 PARAMETERS POSSIBLE
      release-name:
        description: "Name of the release"
        required: true
      snapclient-version:
        type: choice
        description: "The version of snapclient to install"
        required: true
        options:
        - "v0.29.0"
      default-user:
        description: "Raspberry Pi User"
        required: true
        default: 'snapclient'
      default-password:
        description: "Raspberry Pi Password"
        required: true
        default: 'lab-box-snapclient'
      

jobs:
  build:
    name: "Build Image"
    runs-on: ubuntu-latest
    steps:
    - name: "Checkout Repo"
      uses: actions/checkout@v3


    - name: "Setup Environment"
      run: |
        # Source settings
        IMAGE_BITWIDTH="32"     # Also used in the CustoPiZer scripts; Value can either be "32" or "64"
        echo "IMAGE_BITWIDTH=$IMAGE_BITWIDTH" >> $GITHUB_ENV
        # Build image name (to rename and zip)
        IMAGE_NAME="lab-box_wholehouseaudioamp_module_image.img"
        echo "IMAGE_NAME=$IMAGE_NAME" >> $GITHUB_ENV
        IMAGE_NAME_ZIP="lab-box_wholehouseaudioamp_module_image.zip"
        echo "IMAGE_NAME_ZIP=$IMAGE_NAME_ZIP" >> $GITHUB_ENV
        
        SNAPCLIENT_URL_X32=`jq -r .[\"${{ github.event.inputs.snapclient-version }}\"].x32 snapclient_versions.json`
        echo "SNAPCLIENT_URL_X32=$SNAPCLIENT_URL_X32" >> $GITHUB_ENV
        SNAPCLIENT_URL_X64=`jq -r .[\"${{ github.event.inputs.snapclient-version }}\"].x64 snapclient_versions.json`
        echo "SNAPCLIENT_URL_X64=$SNAPCLIENT_URL_X64" >> $GITHUB_ENV


    - name: "Setup Python"
      uses: actions/setup-python@v4
      with:
        python-version: 3.13


    - name: "Get latest Rasberry Pi OS image URLs"
      id: getRasPiImageUrls
      run: |
        linksJson=`python getRasPiLatestImageDownloadUrls.py`
        echo "$linksJson"
        echo "rasPiImagesInfo=$linksJson" >> $GITHUB_OUTPUT

    
    - name: "Select image info"
      id: selectImageInfo
      run: |
        echo "Using image width: \"${{ env.IMAGE_BITWIDTH }}\""
        jsonSelector="x${{ env.IMAGE_BITWIDTH }}"
        chosenImageInfo=$( jq --compact-output -r ".$jsonSelector" <<< '${{ steps.getRasPiImageUrls.outputs.rasPiImagesInfo }}' ) 
        echo "$chosenImageInfo"
        echo "chosenImageInfo=$chosenImageInfo" >> $GITHUB_OUTPUT


    - name: "Download RPi image"
      id: downloadRasPiImage
      run: |
        mkdir build
        cd build
        imageUrl=`jq -r '.urlHttp' <<< '${{ steps.selectImageInfo.outputs.chosenImageInfo }}'`
        echo "Downloading image from URL: $imageUrl"
        wget $imageUrl -q -O input.img.xz
        unxz -f input.img.xz


    - name: "Run CustoPiZer"
      uses: OctoPrint/CustoPiZer@1.2.0
      with:
        workspace: "${{ github.workspace }}/build"
        scripts:  "${{ github.workspace }}/workspace/scripts"
        config: "${{ github.workspace }}/config.local"
        environment: '{ "IMAGE_BITWIDTH": "${{ env.IMAGE_BITWIDTH }}", "RASPI_HOSTNAME": "lab-box-snapclient", "RASPI_USER": "${{ github.event.inputs.default-user }}", "RASPI_PASSWORD": "${{ github.event.inputs.default-password }}", "SNAPCLIENT_URL_X32": "${{ env.SNAPCLIENT_URL_X32 }}", "SNAPCLIENT_URL_X64": "${{ env.SNAPCLIENT_URL_X64 }}", "GITHUB_ENV_SHA": "${{ github.sha }}", "GITHUB_ENV_REF_NAME": "${{ github.ref }}" }'


    - name: "Prepare release"
      run: |
        releasedOn=`jq -r '.releaseDate' <<< '${{ steps.selectImageInfo.outputs.chosenImageInfo }}'`
        architecture=`jq -r '.system' <<< '${{ steps.selectImageInfo.outputs.chosenImageInfo }}'`
        debianVersion=`jq -r '.debianVersion' <<< '${{ steps.selectImageInfo.outputs.chosenImageInfo }}'`
        kernelVersion=`jq -r '.kernelVersion' <<< '${{ steps.selectImageInfo.outputs.chosenImageInfo }}'`
        releaseNotes=`jq -r '.releaseNotes' <<< '${{ steps.selectImageInfo.outputs.chosenImageInfo }}'`
        
        # release body
        cat <<EOF > ./build/release.md
        Image for the [Lab-Box Whole House Audio Amp Module](https://github.com/Wardstein/Lab-Box/Modules/Whole%20House%20Audio%20Amp) Raspberry Pi Zero
        
        Snapclient Version: ${{ github.event.inputs.snapclient-version }}

        Created from the original Raspberry Pi image:
        * Released on: $releasedOn
        * Architecture: $architecture
        * Debian Version: $debianVersion
        * Kernel Version: $kernelVersion
        * Release Notes: $releaseNotes

        Default credentials:
        * User: "${{ github.event.inputs.default-user }}"
        * Password: "${{ github.event.inputs.default-password }}"

        Created with [CustoPiZer](https://github.com/OctoPrint/CustoPiZer)
        EOF
        
        # Rename the image
        cd build
        mv output.img ${{ env.IMAGE_NAME }}


    # https://github.com/OctoPrint/actions/tree/main/package-rpi-image
    - name: "Package the image"
      id: package-image
      uses: OctoPrint/actions/package-rpi-image@main
      with:
        image_path: "build/${{ env.IMAGE_NAME }}"


    # https://github.com/softprops/action-gh-release
    # Needs "Workflow permissions" in Repo->Settings->Actions->Genernal set to "Read and write permissions"
    - name: "Create release & attach assets"
      uses: softprops/action-gh-release@v1
      #if: github.event_name == 'repository_dispatch'
      with:
        name: "${{ github.event.inputs.release-name }}"
        tag_name: "${{ github.event.inputs.release-name }}"
        body_path: "build/release.md"
        prerelease: false
        fail_on_unmatched_files: true
        files: |
          build/${{ env.IMAGE_NAME_ZIP }}
          build/${{ env.IMAGE_NAME_ZIP }}.md5
          build/${{ env.IMAGE_NAME_ZIP }}.sha256
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
